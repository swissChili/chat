/*
Decentralized chat software
Copyright (C) 2021  swissChili

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package sh.swisschili.chat.client;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class AddGroupDialog extends JDialog {
    private JPanel rootPanel;
    private JTextField groupName;
    private JTextField server;
    private JButton cancelButton;
    private JButton addButton;

    public interface AddGroupListener {
        void groupAdded(String groupName, String server);
    }

    public AddGroupDialog(AddGroupListener listener) {
        add(rootPanel);

        setMinimumSize(new Dimension(500, 200));

        DocumentListener documentListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkInputs();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkInputs();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkInputs();
            }

            private final Pattern pattern = Pattern.compile("^[0-9a-zA-Z\\.\\-]+$");

            private boolean isValid(String input) {
                if (input.trim().isEmpty())
                    return false;

                Matcher matcher = pattern.matcher(input);
                return matcher.matches();
            }

            private void checkInputs() {
                addButton.setEnabled(isValid(groupName.getText()) && isValid(server.getText()));
            }
        };

        groupName.getDocument().addDocumentListener(documentListener);
        server.getDocument().addDocumentListener(documentListener);

        cancelButton.addActionListener(e -> setVisible(false));

        addButton.addActionListener(e -> {
            setVisible(false);
            listener.groupAdded(groupName.getText(), server.getText());
        });

        getRootPane().setDefaultButton(addButton);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:d:grow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        rootPanel.setEnabled(true);
        final JLabel label1 = new JLabel();
        label1.setText("Group Name");
        CellConstraints cc = new CellConstraints();
        rootPanel.add(label1, cc.xy(1, 3));
        final JLabel label2 = new JLabel();
        label2.setText("Server");
        rootPanel.add(label2, cc.xy(1, 7));
        groupName = new JTextField();
        rootPanel.add(groupName, cc.xy(3, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        server = new JTextField();
        rootPanel.add(server, cc.xy(3, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        rootPanel.add(panel1, cc.xy(3, 9));
        addButton = new JButton();
        addButton.setEnabled(false);
        addButton.setText("Add");
        panel1.add(addButton, cc.xy(1, 3));
        cancelButton = new JButton();
        cancelButton.setEnabled(true);
        cancelButton.setText("Cancel");
        panel1.add(cancelButton, cc.xy(3, 3));
        final JLabel label3 = new JLabel();
        label3.setText("Group names can only contain letters, numbers and dashes.");
        rootPanel.add(label3, cc.xy(3, 1));
        final JLabel label4 = new JLabel();
        label4.setText("Enter the server IP or domain name");
        rootPanel.add(label4, cc.xy(3, 5));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

}
